<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.0.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>10</y>
      <w>340</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>Controller
bg=blue
--
- duckURLBase : String
- window : DuckFrame
- duckWindows : ArrayList&lt;DuckPopupFrame&gt;
--
--
+ Controller() : constructor
+ start() : void
+ handleError(Exception) : void
+ getRandomDuckURL() : URL
+ addDuckWindow(DuckPopupFrame) : void
+ removeDuckWindow(DuckPopupFrame) : void
+ saveDuckWindows(String) : void
+ loadDuckWindows(String) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>350</x>
      <y>0</y>
      <w>530</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>IOController
bg=blue
--
_+ readSingleJSON(Controller, String, String, String) : Object_
_+ readImageIconFromURL(Controller, URL, int) : ImageIcon_
_+ saveWindowStates(Controller, String, ArrayList&lt;DuckWindowState&gt; : void_
_+ loadWindowStates(Controller, String) : ArrayList&lt;DuckWindowState&gt;_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>290</y>
      <w>280</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>InternetDuck
bg=yellow
--
A record thingy.
Don't know how to do that in uml ):</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>390</y>
      <w>320</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>DuckFrame
bg=red
--
- app : Controller
- panel : DuckPanel
--
+ DuckFrame(Controller) : constructor
- setupFrame() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>360</x>
      <y>130</y>
      <w>370</w>
      <h>350</h>
    </coordinates>
    <panel_attributes>DuckPanel
bg=red
--
- app : Controller
- layout : SpringLayout
- displayLabel : JLabel
- menuPanel : JPanel
- duckButton : JButton
- newWindowButton : JButton
- saveButton : JButton
- loadButton : JButton
--
+ DuckPanel(Controller) : constructor
- setupPanel() : void
- setupListeners() : void
- setupLayout() : void
- saveWindows() : void
- loadWindows() : void
- openDuckWindow() : void
- loadRandomDuck() : void
+ loadDuck(URL) : void
+ toDuckWindowState() : DuckWindowState
+ loadDuckWindowState(DuckWindowState) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>510</y>
      <w>390</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>DuckPopupFrame
bg=red
--
- app : Controller
- panel : DuckPopupPanel
--
+ DuckPopupFrame(Controller) : constructor
- setupFrame() : void
+ dispose() : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>670</y>
      <w>370</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>DuckPopupPanel
bg=red
--
- app : Controller
- layout : SpringLayout
- displayLabel : JLabel
--
+ DuckPopupPanel(Controller) : constructor
- setupPanel() : void
- setupListeners() : void
- setupLayout() : void
+ loadRandomDuck() : void
+ loadDuck(URL) : void
+ toDuckWindowState() : DuckWindowState
+ loadDuckWindowState(DuckWindowState) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>440</x>
      <y>510</y>
      <w>330</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>DuckWindowState
bg=yellow
--
- duckURL : URL
- location : Point
--
+ DuckWindowState(URL, Point) : constructor
+ get()</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
